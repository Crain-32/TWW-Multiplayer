package crain.client.view;


import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import crain.client.view.events.GeneralMessageEvent;
import org.slf4j.Logger;
import org.springframework.context.event.EventListener;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Component;

import javax.swing.*;
import javax.swing.border.Border;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

@Component
public class MessageWrapper {
    private static final Logger log = org.slf4j.LoggerFactory.getLogger(MessageWrapper.class);
    private JTextArea mainTextArea;
    private JButton clearText;
    private JPanel messagePanel;


    private int amount;

    public void postConstruct() {
        clearText.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                mainTextArea.setText("");
                super.mouseClicked(e);
            }
        });
        Border border = BorderFactory.createLineBorder(Color.BLACK);
        mainTextArea.setBorder(BorderFactory.createCompoundBorder(border, BorderFactory.createEmptyBorder(5, 5, 5, 5)));
    }

    @Async
    @EventListener
    public void onGeneralMessageEvent(GeneralMessageEvent e) {
        log.debug("General Message Event Received: {}", e.message());
        SwingUtilities.invokeLater(() -> this.jTextArea().insert(e.message(), 0)
        );
    }

    public JPanel getMessagePanel() {
        return this.messagePanel;
    }

    public JTextArea jTextArea() {
        return this.mainTextArea;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        messagePanel = new JPanel();
        messagePanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 10, 10), -1, -1));
        clearText = new JButton();
        clearText.setText("Clear");
        clearText.setVerticalAlignment(0);
        clearText.setVerticalTextPosition(0);
        messagePanel.add(clearText, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 20), null, new Dimension(-1, 20), 0, false));
        mainTextArea = new JTextArea();
        mainTextArea.setCaretPosition(0);
        mainTextArea.setEditable(false);
        mainTextArea.setLineWrap(true);
        mainTextArea.setMaximumSize(new Dimension(-1, -1));
        mainTextArea.setMinimumSize(new Dimension(-1, -1));
        mainTextArea.setPreferredSize(new Dimension(-1, -1));
        mainTextArea.setText("");
        messagePanel.add(mainTextArea, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(300, 250), null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return messagePanel;
    }

}
